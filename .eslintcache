[{"D:\\code\\kms_groma\\src\\index.tsx":"1","D:\\code\\kms_groma\\src\\stores\\data\\ProfileStore.tsx":"2","D:\\code\\kms_groma\\src\\stores\\data\\profileStore.tsx":"3","D:\\code\\kms_groma\\src\\pages\\Home\\index.tsx":"4","D:\\code\\kms_groma\\src\\components\\ThemeSwitcher\\index.tsx":"5","D:\\code\\kms_groma\\src\\App.tsx":"6","D:\\code\\kms_groma\\src\\components\\NavigationBar\\index.tsx":"7"},{"size":477,"mtime":1610643311905,"results":"8","hashOfConfig":"9"},{"size":573,"mtime":1610620253451,"results":"10","hashOfConfig":"9"},{"size":685,"mtime":1610642317706,"results":"11","hashOfConfig":"9"},{"size":563,"mtime":1612189972845,"results":"12","hashOfConfig":"9"},{"size":961,"mtime":1610720751154,"results":"13","hashOfConfig":"9"},{"size":889,"mtime":1610649413628,"results":"14","hashOfConfig":"9"},{"size":600,"mtime":1610718305812,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1id5mku",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"D:\\code\\kms_groma\\src\\index.tsx",[],["34","35"],"D:\\code\\kms_groma\\src\\stores\\data\\ProfileStore.tsx",[],"D:\\code\\kms_groma\\src\\stores\\data\\profileStore.tsx",[],"D:\\code\\kms_groma\\src\\pages\\Home\\index.tsx",[],"D:\\code\\kms_groma\\src\\components\\ThemeSwitcher\\index.tsx",["36","37","38"],"import React from 'react';\r\nimport {\r\n  Switch,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from '@material-ui/core';\r\n\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\n\r\nconst ThemeSwitcher: React.FC = () => {\r\n  const { switcher, themes, currentTheme, status } = useThemeSwitcher();\r\n  const [isDarkMode, setIsDarkMode] = React.useState(false);\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode((previous) => {\r\n      switcher({ theme: previous ? themes.light : themes.dark });\r\n      return !previous;\r\n    });\r\n  };\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          id=\"Switcher\"\r\n          value=\"start\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Start\"\r\n          labelPlacement=\"start\"\r\n          onChange={toggleDarkMode}\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","D:\\code\\kms_groma\\src\\App.tsx",["39"],"import React from 'react';\nimport { Container } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home/';\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher';\nimport ThemeSwitcher from './components/ThemeSwitcher';\nimport NavigationBar from './components/NavigationBar';\nimport { Navigation } from '@material-ui/icons';\n\nconst themes = {\n  light: `${process.env.PUBLIC_URL}/style/light.css`,\n  dark: `${process.env.PUBLIC_URL}/style/dark.css`,\n};\n\nconst App: React.FC = () => {\n  return (\n    <ThemeSwitcherProvider defaultTheme=\"light\" themeMap={themes}>\n      <Container maxWidth={false} disableGutters={true}>\n        <ThemeSwitcher />\n        <NavigationBar />\n        <Switch>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Container>\n    </ThemeSwitcherProvider>\n  );\n};\n\nexport default App;\n","D:\\code\\kms_groma\\src\\components\\NavigationBar\\index.tsx",["40"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Button } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavigationBar: React.FC = () => {\r\n  return (\r\n    <AppBar id=\"BarMenu\" position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Link to=\"/\" className=\"site_logo\">\r\n          <div className=\"\"></div>\r\n        </Link>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":12,"column":29,"nodeType":"47","messageId":"48","endLine":12,"endColumn":41},{"ruleId":"45","severity":1,"message":"49","line":12,"column":43,"nodeType":"47","messageId":"48","endLine":12,"endColumn":49},{"ruleId":"45","severity":1,"message":"50","line":13,"column":10,"nodeType":"47","messageId":"48","endLine":13,"endColumn":20},{"ruleId":"45","severity":1,"message":"51","line":9,"column":10,"nodeType":"47","messageId":"48","endLine":9,"endColumn":20},{"ruleId":"45","severity":1,"message":"52","line":2,"column":39,"nodeType":"47","messageId":"48","endLine":2,"endColumn":45},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"@typescript-eslint/no-unused-vars","'currentTheme' is assigned a value but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","'isDarkMode' is assigned a value but never used.","'Navigation' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]